{"version":3,"sources":["components/emojiItem.js","components/EmojiContainer.js","components/Header.js","App.js","index.js"],"names":["emojiItem","props","style","listStyle","width","height","textAlign","lineHeight","fontSize","backgroundColor","boxShadow","margin","borderRadius","symbol","EmojiContainer","display","flexWrap","emojiData","map","emoji","key","title","Header","href","data-icon","data-text","data-show-count","data-size","console","log","emojiList","App","state","searchValue","grabValueFromInput","e","filteredEmoji","filter","item","inputValue","target","value","toLowerCase","includes","keywords","setState","this","className","justifyContent","type","name","id","outline","border","onChange","React","Component","reactDOM","render","document","getElementById"],"mappings":"0KAEe,SAASA,EAAUC,GAC9B,OAEQ,wBAAIC,MAAO,CAACC,UAAU,OAAOC,MAAM,QAAQC,OAAO,QAAQC,UAAU,SAASC,WAAW,QAAQC,SAAS,OAAOC,gBAAgB,QAASC,UAAU,mBAAoBC,OAAO,OAAOC,aAAa,SAAUX,EAAMY,QCF/M,SAASC,EAAeb,GACnC,OACJ,wBAAIC,MAAO,CAACE,MAAM,OAAOO,OAAO,YAAYI,QAAQ,OAAOC,SAAS,SAEnEf,EAAMgB,UAAUC,KAAI,SAAAC,GACL,OACA,kBAAC,EAAD,CAAWC,IAAKD,EAAME,MAAOR,OAAQM,EAAMN,a,WCN5C,SAASS,IACpB,OACI,yBAAKpB,MAAO,CAACI,UAAU,WACvB,oDAEA,4EACA,2BACI,kBAAC,IAAD,CAAciB,KAAK,4BAA4BC,YAAU,eAAeC,YAAU,OAAOC,mBAAiB,EAAMC,YAAU,UAD9H,mBAGI,kBAAC,IAAD,CAAcJ,KAAK,4BAA4BC,YAAU,sBAAsBC,YAAU,OAAOC,mBAAiB,EAAMC,YAAU,Y,WCP7IC,QAAQC,IAAIC,G,IAyCGC,E,4MAtCbC,MAAM,CACJC,YAAY,GACZhB,UAAUa,G,EAEZI,mBAAmB,SAACC,GAGlB,IAAIC,EAAcN,EAAUO,QAAO,SAAAC,GACjC,IAAIC,EAAWJ,EAAEK,OAAOC,MAAMC,cAC9B,QAAGJ,EAAKjB,MAAMqB,cAAcC,SAASJ,MAGlCD,EAAKM,SAASF,cAAcC,SAASJ,MAK1C,EAAKM,SAAS,CACZZ,YAAYE,EAAEK,OAAOC,MACrBxB,UAAUmB,K,4CAGd,WAGF,OAFIR,QAAQC,IAAI,gBAAiBiB,KAAKd,MAAMC,aAGxC,yBAAKc,UAAU,MAAM7C,MAAO,CAACO,gBAAgB,YAC3C,kBAACa,EAAD,MACA,yBAAKpB,MAAO,CAACa,QAAQ,OAAOiC,eAAe,WACzC,2BAAOC,KAAK,OAAOC,KAAK,GAAGC,GAAG,GAAGjD,MAAO,CAACM,SAAS,OAAOJ,MAAM,QAASgD,QAAQ,OAAOxC,aAAa,OAAOyC,OAAO,wBAAyBC,SAAUR,KAAKZ,sBAE5J,kBAACpB,EAAD,CAAgBG,UAAW6B,KAAKd,MAAMf,iB,GAhC1BsC,IAAMC,W,cCDxBC,EAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U","file":"static/js/main.0aab66c0.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function emojiItem(props) {\n    return (\n   \n            <li style={{listStyle:\"none\",width:\"200px\",height:\"200px\",textAlign:\"center\",lineHeight:\"200px\",fontSize:\"50px\",backgroundColor:\"white\", boxShadow:\"3px 5px 5px gray\", margin:\"10px\",borderRadius:\"25px\"}}>{props.symbol}</li>\n   \n    )\n}\n","import React from 'react'\nimport EmojiItem from './emojiItem'\n\nexport default function EmojiContainer(props) {\n    return (\n<ul style={{width:\"80vw\",margin:\"20px auto\",display:\"flex\",flexWrap:\"wrap\"}}>\n\n{props.emojiData.map(emoji=>{\n                return (\n                <EmojiItem key={emoji.title} symbol={emoji.symbol}/>\n                )\n            })}\n        \n</ul>\n    )\n}\n","import React from 'react'\nimport GitHubButton from 'react-github-btn'\n\nexport default function Header() {\n    return (\n        <div style={{textAlign:\"center\"}}>\n        <h1> Search Emoji &#x26F0;</h1>\n     \n        <p>A simple emoji search tool made with ReactJS.</p>\n        <p>\n            <GitHubButton href=\"https://github.com/nrcool\" data-icon=\"octicon-star\" data-text=\"star\" data-show-count={true} data-size=\"large\"/>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <GitHubButton href=\"https://github.com/nrcool\" data-icon=\"octicon-repo-forked\" data-text=\"fork\" data-show-count={true} data-size=\"large\"/>\n            </p>\n        </div>\n    )\n}\n\n\n","\nimport React from 'react';\nimport EmojiContainer from './components/EmojiContainer';\nimport Header from './components/Header'\nimport emojiList from \"./json/emoji.json\"\nconsole.log(emojiList);\n\nclass App extends React.Component{\n  state={\n    searchValue:\"\",\n    emojiData:emojiList\n  }\n  grabValueFromInput=(e)=>{\n    \n    // console.log(\"user is typing\");\n    let filteredEmoji=emojiList.filter(item=>{\n      let inputValue=e.target.value.toLowerCase();\n      if(item.title.toLowerCase().includes(inputValue)){\n        return true;\n      }\n      if(item.keywords.toLowerCase().includes(inputValue)){\n        return true;\n      }\n      return false;\n    })\n    this.setState({\n      searchValue:e.target.value,\n      emojiData:filteredEmoji\n    })\n  }\n  render(){\n    console.log(\"render In App\", this.state.searchValue);\n\nreturn(\n    <div className=\"App\" style={{backgroundColor:\"#EAEDF0\"}}>\n      <Header/>\n      <div style={{display:\"flex\",justifyContent:\"center\"}}>\n        <input type=\"text\" name=\"\" id=\"\" style={{fontSize:\"20px\",width:\"400px\", outline:\"none\",borderRadius:\"10px\",border:\"1px solid light-gray\"}} onChange={this.grabValueFromInput}/>\n      </div>\n      <EmojiContainer emojiData={this.state.emojiData}/>\n    </div>);}}\n  \n\n\n\n\nexport default App;\n\n\n\n\n\n\n// // Other way using Class Component\n\n// export default function App() {\n//   state={\n//     searchValue:\"\"\n//   }\n//   grabValueFromInput=(e)=>{\n//     console.log(\"user is typing\");\n//   }\n//   return (\n//     <div className=\"App\" style={{backgroundColor:\"#EAEDF0\"}}>\n//       <Header/>\n//       <div style={{display:\"flex\",justifyContent:\"center\"}}>\n//         <input type=\"text\" name=\"\" id=\"\" style={{fontSize:\"20px\",width:\"400px\",outline:\"none\",borderRadius:\"10px\",border:\"1px solid light-gray\"}} onChange={this.grabValueFromInput}/>\n//       </div>\n//     </div>\n//   );\n// }\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}